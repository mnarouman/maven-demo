<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>fr.mna.test</groupId>
	<artifactId>mavenTestProject</artifactId>
	<version>1.0</version>

	<packaging>pom</packaging>
	<name>mavenTestProject</name>

	<url>http://maven.apache.org</url>
	<distributionManagement>
		<repository>
			<id>mna</id>
			<name>Mon repos</name>
			<url>scp//maven.jazzva.fr</url>
		</repository>
	</distributionManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<slf4j.version>1.7.21</slf4j.version>
		<slf4j-version>${slf4j.version}</slf4j-version>
		<logback-version>1.2.3</logback-version>
		<logback.version>${logback-version}</logback.version>

		<thucydides.version>0.9.275</thucydides.version>
        <maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
        <maven.failsafe.plugin.version>${maven.surefire.plugin.version}</maven.failsafe.plugin.version>
        <surefire.reportplugin.version>2.12.4</surefire.reportplugin.version>

		<param1>Mon param</param1>

		<my.database.driver>com.p6spy.engine.spy.P6SpyDriver</my.database.driver>
		<my.database.url>jdbc:p6spy:postgresql://localhost:5432/cec?searchpath=public</my.database.url>
		<my.database.user>cec</my.database.user>
		<my.database.password>cec</my.database.password>

		<sonar.host.url>http://localhost:9000</sonar.host.url>
		<jacoco.version>0.8.6</jacoco.version>
		<MY_ARCHI></MY_ARCHI>
		<MY_JDK_HOME></MY_JDK_HOME>
		
		<maven.antrun.plugin.version>3.0.0</maven.antrun.plugin.version>
		
		<rules.server></rules.server>

		<checkstyle.maven.version>3.1.2</checkstyle.maven.version>
		<checkstyle.version>8.41.1</checkstyle.version>

		<pmd.version>3.14.0</pmd.version>
		
		<findbugs.version>3.0.5</findbugs.version>
  		<findsecbugs.plugin.version>1.4.5</findsecbugs.plugin.version>
		
		<jacoco-maven-plugin.version>0.8.6</jacoco-maven-plugin.version>
		<project.testresult.directory>${project.build.directory}</project.testresult.directory>
		<!-- Sonar/Jacoco integration. Note that these properties need to be defined outside the "coverage" profile
		because we want to be to able to execute mvn sonar:sonar without passing a profile -->
		<!-- Tells Sonar to use jacoco for coverage results -->
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
		<!-- Jacoco version to use -->
		<jacoco.version>${jacoco-maven-plugin.version}</jacoco.version>
		<!-- The Sonar Jacoco Listener for JUnit to extract coverage details per test -->
		<sonar-jacoco-listeners.version>1.4</sonar-jacoco-listeners.version>
		<!-- Don't let Sonar execute tests. We will ask it to Maven -->
		<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
		    <!-- The system property jacoco.outputDir needs to be override on the command line
		with an absolute path if you want to merge results from all modules.
		Example in a Jenkisn build where ${WORKSPACE} is defined and your project in the root directory of the workspace :
		mvn clean install -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target
		Note that unfortunately using the following does not work because of
		 
		http://jira.codehaus.org/browse/SONAR-3427:
		 
		<jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir>
		-->
		<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
		<!-- Jacoco output file for UTs -->
		<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
		<!-- Tells Sonar where the Jacoco coverage result file is located for Unit Tests -->
		<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
		<!-- Jacoco output file for ITs -->
		<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
		<!-- Tells Sonar where the Jacoco coverage result file is located for Integration Tests -->
		<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
		
		<jdepend.maven.plugin.version>2.0</jdepend.maven.plugin.version>
	</properties>

	<!-- <modules> <module>module1</module> <module>module2</module> <module>moduleWebapp</module> 
		</modules> -->

	<dependencies>
		
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.5.2</version>
		</dependency>
		
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.3</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<source>1.8</source>
						<target>1.8</target>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.codehaus.gmaven</groupId>
					<artifactId>gmaven-plugin</artifactId>
					<version>1.5</version>
					<executions>
						<execution>
							<id>Architecture Definition</id>
							<phase>validate</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<source>
									String osName = System.getProperty('os.name')
									project.properties.setProperty('os.name', osName)

									String sunArchDataModel = System.getProperty('sun.arch.data.model')
									project.properties.setProperty('sun.arch.data.model',sunArchDataModel)
									String archi = project.properties.getProperty('MY_ARCHI')
									if(archi=='32' || archi=='64'){
										project.properties.setProperty('archi', archi)
									}else{
										project.properties.setProperty('archi', sunArchDataModel)
									}

									String myJavaHome =	project.properties.getProperty('MY_JDK_HOME')
									boolean notEmpty = myJavaHome != null &amp;!myJavaHome.isEmpty() &amp; !myJavaHome.trim().isEmpty()
									if(notEmpty == false){
										project.properties.setProperty('MY_JAVA_HOME', '')
									}else{
										project.properties.setProperty('MY_JAVA_HOME', myJavaHome+'/bin/javac')
									}

									<!-- EXPORT ARTIFACT LOCAL REPOSITORY PATH -->
									String fileSep = System.getProperty('file.separator')
									<!-- println("The file separator is "+ fileSep) -->

									<!-- println("Group Id : "+project.groupId) -->
									String groupIdPath = project.groupId
									if(project.groupId.contains('.')){
										groupIdPath = project.groupId.replace(".", fileSep)
									}
									<!-- println("Group Id path : "+groupIdPath ) -->

									<!-- println("Artifact Id : "+project.artifactId) -->
									String artifactIdPath = project.artifactId

									<!-- println("Version : "+project.version) -->

									String localRepository = settings.localRepository
									<!-- println("Local repository : "+localRepository) -->

									String artifactPath = localRepository + fileSep + groupIdPath +fileSep + artifactIdPath + fileSep + project.version + fileSep+ artifactIdPath + "-" + project.version
									if(project.packaging.equals("") || project.packaging.equals("jar")){
										<!-- println("JAR packaging !!") -->
										artifactPath = artifactPath + ".jar"
									}

									if(project.packaging.equals("war")){
										<!-- println("WAR packaging !!") -->
										artifactPath = artifactPath + ".war"
									}

									if(project.packaging.equals("pom")){
										<!-- println("POM packaging !!") -->
										artifactPath = artifactPath + ".pom"
									}

									<!-- println("Artifact path : " + artifactPath) -->
									project.properties.setProperty('artifactPath', artifactPath)

								</source>
							</configuration>
						</execution>
					</executions>
					<configuration>
						<providerSelection>2.0</providerSelection>
						<source>2.0</source>
					</configuration>
				</plugin>

				
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-compiler-plugin
										</artifactId>
										<versionRange>
											[3.5,)
										</versionRange>
										<goals>
											<goal>testCompile</goal>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.gmaven
										</groupId>
										<artifactId>
											gmaven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>execute</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											findbugs-maven-plugin
										</artifactId>
										<versionRange>
											[3.0.5,)
										</versionRange>
										<goals>
											<goal>findbugs</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>3.7.0.1746</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${checkstyle.maven.version}</version>
					<configuration>
						<configLocation>${rules.server}my/toolkit/metrics/checkstyle/sun_checks.xml</configLocation>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>checkstyle</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
						<!--dependency>
							<groupId>my.toolkit</groupId>
							<artifactId>ProjectMetrics</artifactId>
							<version>5.0.1-RELEASE</version>
						</dependency-->
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>${pmd.version}</version>
					<executions>
						<execution>
                            <id>pmd</id>
							<goals>
								<goal>pmd</goal>
							</goals>
						</execution>
                        <execution>
                            <id>cpd</id>
                            <goals>
                                <goal>cpd</goal>
                            </goals>
                        </execution>
					</executions>
					<configuration>
						<!-- PMD options -->
                        <skipEmptyReport>false</skipEmptyReport>
						<targetJdk>1.8</targetJdk>
						<aggregate>false</aggregate>
						<format>xml</format>
                        
						<rulesets>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/basic.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/braces.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/clone.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/codesize.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/coupling.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/design.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/empty.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/imports.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/javabeans.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/logging-java.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/naming.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/optimizations.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/strictexception.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/strings.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/sunsecure.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/typeresolution.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/unnecessary.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/java/unusedcode.xml</ruleset>

							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/ecmascript/basic.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/ecmascript/braces.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/ecmascript/controversial.xml</ruleset>
							<ruleset>${rules.server}my/toolkit/metrics/pmd/rulesets/ecmascript/unnecessary.xml</ruleset>
						</rulesets>

						<!-- CPD options -->
                        <!-- <outputDirectory>${project.reporting.outputDirectory}</outputDirectory>
                        <targetDirectory>${project.build.directory}</targetDirectory> -->
						<minimumTokens>20</minimumTokens>
                        
						<ignoreIdentifiers>false</ignoreIdentifiers>
						<ignoreLiterals>false</ignoreLiterals>
						<linkXref>true</linkXref>
						<sourceEncoding>utf-8</sourceEncoding>
                        <!-- <includes>
                            <include>${basedir}/**/*.java</include>
                        </includes> -->
						<!-- <excludes>
							<exclude>${basedir}/**/*Bean.java</exclude>
							<exclude>${basedir}/**/generated/**/*.java</exclude>
						</excludes>
						<excludeRoots>
							<excludeRoot>target/src</excludeRoot>
							<excludeRoot>src/generated/java</excludeRoot>
						</excludeRoots> -->
					</configuration>
					<dependencies>
						<!--dependency>
							<groupId>my.toolkit</groupId>
							<artifactId>ProjectMetrics</artifactId>
							<version>5.0.1-RELEASE</version>
						</dependency-->
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs.version}</version>
					<configuration>
						<threshold>Low</threshold>
						<failOnError>false</failOnError>
						<effort>Max</effort>
						<xmlOutput>true</xmlOutput>
						<!-- <includeFilterFile>${rules.server}my/toolkit/metrics/findbugs/findbugs-security-include.xml</includeFilterFile>
						<excludeFilterFile>${rules.server}my/toolkit/metrics/findbugs/findbugs-security-exclude.xml</excludeFilterFile>
						<plugins>
							<plugin>
								<groupId>com.h3xstream.findsecbugs</groupId>
								<artifactId>findsecbugs-plugin</artifactId>
								<version>${findsecbugs.plugin.version}</version>
							</plugin>
						</plugins> -->
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>findbugs</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.slf4j</groupId>
							<artifactId>slf4j-api</artifactId>
							<version>${slf4j.version}</version>
						</dependency>
						<dependency>
							<groupId>ch.qos.logback</groupId>
							<artifactId>logback-core</artifactId>
							<version>${logback-version}</version>
						</dependency>
						<dependency>
							<groupId>ch.qos.logback</groupId>
							<artifactId>logback-classic</artifactId>
							<version>${logback-version}</version>
						</dependency>
						<!--dependency>
							<groupId>my.toolkit</groupId>
							<artifactId>ProjectMetrics</artifactId>
							<version>5.0.1-RELEASE</version>
						</dependency-->
					</dependencies>
				</plugin>

				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<executions>
					
						<execution>
							<id>pre-unit-tests</id>
							<!--phase: initialize (default) / before maven-surefire-plugin (phase test) -->
							<phase>process-test-classes</phase> 
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${project.testresult.directory}/jacoco-ut.exec</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
								<!-- <propertyName>surefireArgLine</propertyName> -->
							</configuration>
						</execution>
						
						<execution>
							<id>post-unit-test</id>
							<!--phase: verify (default) / after maven-surefire-plugin (phase test) -->
							<phase>prepare-package</phase> 
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<dataFile>${project.testresult.directory}/jacoco-ut.exec</dataFile>
								<outputDirectory>${project.testresult.directory}</outputDirectory>
							</configuration>
						</execution>
						
						<execution>
							<id>pre-integration-test</id>
							<!--phase: initialize (default) / before cargo/arquillian... start -->
							<phase>package</phase> 
							<goals>
								<goal>prepare-agent</goal>
							</goals>
							<configuration>
								<!-- Sets the path to the file which contains the execution data. -->
								<destFile>${project.testresult.directory}/jacoco-it.exec</destFile>
								<!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
								<!-- <propertyName>failsafeArgLine</propertyName> -->
							</configuration>
						</execution>
						
						<execution>
							<id>post-integration-test</id>
							<!--phase: verify (default) / after cargo/arquillian... stop -->
							<phase>post-integration-test</phase> 
							<goals>
								<goal>report</goal>
							</goals>
							<configuration>
								<dataFile>${project.testresult.directory}/jacoco-it.exec</dataFile>
								<outputDirectory>${project.testresult.directory}</outputDirectory>
							</configuration>
						</execution>
						
						<!-- <execution>
							<id>default-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									implementation is needed only for Maven 2
									<rule implementation="org.jacoco.maven.RuleConfiguration">
										<element>BUNDLE</element>
										<limits>
											implementation is needed only for Maven 2
											<limit implementation="org.jacoco.report.check.Limit">
												<counter>COMPLEXITY</counter>
												<value>COVEREDRATIO</value>
												<minimum>0.60</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution> -->
					</executions>
				</plugin>
				
				<plugin>
		          <groupId>org.codehaus.mojo</groupId>
		          <artifactId>jdepend-maven-plugin</artifactId>
		          <version>${jdepend.maven.plugin.version}</version>
		       </plugin>
			   <plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven.antrun.plugin.version}</version>
					<executions>
						<execution>
							<id>architecture</id>
							<phase>validate</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<target>
									<echo>Repository MAVEN = ${settings.localRepository}</echo>
									<echo>OS Name = ${os.name} : version ${os.version}</echo>
									<echo>Arch Data Model = ${archi} bits</echo>
									<echo>Java Compiler : ${java.vendor}; version ${java.version} (${java.home})</echo>
									<echo>Artifact Path = ${artifactPath}</echo>
								</target>
							</configuration>
						</execution>

                            <!-- CLEAN -->
                            <execution>
                                <id>id.pre-clean</id>
                                <phase>pre-clean</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} : pre-clean phase *******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.clean</id>
                                <phase>clean</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} : clean phase *********</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.post-clean</id>
                                <phase>post-clean</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} : post-clean phase ******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            
                            <!-- DEFAULT -->
                            <execution>
                                <id>id.validate</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in validate phase (1 of 21) *************</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.generate-sources</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in generate-sources phase (2 of 21) **********</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.process-sources</id>
                                <phase>process-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in process-sources phase (3 of 21) *********</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.generate-resources</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in generate-resources phase (4 of 21) *******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.process-resources</id>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in process-resources phase (5 of 21) *********</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.compile</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in compile phase (6 of 21) ****************</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.process-classes</id>
                                <phase>process-classes</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in process-classes phase (7 of 21) ********</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.generate-test-sources</id>
                                <phase>generate-test-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                       <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in generate-test-sources phase (8 of 21) *****</echo>
                                        <echo>************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.process-test-sources</id>
                                <phase>process-test-sources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in process-test-sources phase (9 of 21) ******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.generate-test-resources</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in generate-test-resources phase (10 of 21) ****</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.process-test-resources</id>
                                <phase>process-test-resources</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in process-test-resources phase (11 of 21) ******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.test-compile</id>
                                <phase>test-compile</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in test-compile phase (12 of 21) ***********</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.test</id>
                                <phase>test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in test phase (13 of 21) ***************</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.prepare-package</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in prepare-package phase (14 of 21) ********</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.package</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in package phase (15 of 21) **************</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.pre-integration-test</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in pre-integration-test phase (16 of 21) ******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.integration-test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in integration-test phase (17 of 21) *******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.post-integration-test</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in post-integration-test phase (18 of 21) *****</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.verify</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in verify phase (19 of 21) ***************</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.install</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in install phase (20 of 21) **************</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.deploy</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} in deploy phase (21 of 21) *************</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                                                
                            <!-- SITE -->
                            <execution>
                                <id>id.pre-site</id>
                                <phase>pre-site</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} : pre-site phase *******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.site</id>
                                <phase>site</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} : site phase **********</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.post-site</id>
                                <phase>post-site</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} : post-site phase *******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                            <execution>
                                <id>id.site-deploy</id>
                                <phase>site-deploy</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <configuration>
                                    <target>
                                        <echo>*************************************************************************************************************</echo>
                                        <echo>*********** ${project.name} : site-deploy phase ******</echo>
                                        <echo>*************************************************************************************************************</echo>
                                    </target>
                                </configuration>
                            </execution>
                    </executions>
                </plugin>	
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.1.1</version>
				</plugin>				
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<!-- <configuration>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
					</suiteXmlFiles>
				</configuration> -->
			</plugin>
            <plugin>
              <groupId>org.owasp</groupId>
              <artifactId>dependency-check-maven</artifactId>
              <version>5.3.2</version>
              <configuration>
                <format>ALL</format>
              </configuration>
              <executions>
                  <execution>
                      <goals>
                          <goal>check</goal>
                      </goals>
                  </execution>
              </executions>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
				<configuration>
					<includes>
						<include>${basedir}/src/test/java/**/*IT.java</include>
					</includes>
					<additionalClasspathElements>
						<additionalClasspathElement>${basedir}/target/test-classes</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
                 <executions>
	                  <execution>
	                     <id>integration-test</id>
	                     <inherited>true</inherited>
	                      <goals>
	                          <goal>integration-test</goal>
	                          <goal>verify</goal>
	                      </goals>
	                  </execution>
	              </executions>

			</plugin>

			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>enforce</id>
						<configuration>
							<rules>
								<DependencyConvergence/>
							</rules>
						</configuration>
						<goals>
							<goal>enforce</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
                <version>2.0</version>
                <configuration>
                    <classDirectory>${project.build.outputDirectory}</classDirectory>
                    <outputDirectory>${project.build.outputDirectory}/site</outputDirectory>
                    
                    <projectDirectory>${basedir}</projectDirectory>
                    <skip>false</skip>
                </configuration>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>
	<dependencyManagement>
		<dependencies>
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>6.9.13.6</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j-version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback-version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback-version}</version>
			</dependency>
			<dependency>
				<groupId>fr.mna</groupId>
				<artifactId>module1</artifactId>
				<version>1.0</version>
			</dependency>
			<dependency>
				<groupId>fr.mna</groupId>
				<artifactId>module2</artifactId>
				<version>1.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<modules>
				<module>module1</module>
				<module>module2</module>
				<module>moduleWebapp</module>
			</modules>
		</profile>

		<profile>
			<id>t1</id>
			<modules>
				<module>module1</module>
				<module>module2</module>
			</modules>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>params</id>
								<phase>validate</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo>Repository MAVEN = ${settings.localRepository}</echo>
										<echo>OS Name = ${os.name} : version ${os.version}</echo>
										<echo>Java Compiler : ${java.vendor}; version ${java.version}
											(${java.home})</echo>
										<echo>Driver JDBC = ${my.database.driver}</echo>
										<echo>URL Database = ${my.database.url}</echo>
										<echo>Username = ${my.database.user}</echo>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
                        <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-dependency-plugin</artifactId>
                      <version>3.1.1</version>
                      <executions>
                        <execution>
                            <goals>
                                <goal>analyze</goal>
                            </goals>
                            <phase>test-compile</phase>
                        </execution>
                      </executions>
                      <configuration>
                        <failOnWarning>false</failOnWarning>
                        <outputXML>true</outputXML>
                        
                      </configuration>
                    </plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.sonar-plugins</groupId>
				<artifactId>maven-report</artifactId>
				<version>0.1</version>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${pmd.version}</version>
				<configuration>
					<skip>false</skip>
					<targetJdk>1.7</targetJdk>
					<excludeRoots>
						<excludeRoot>target/generated-sources</excludeRoot>
					</excludeRoots>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jdepend-maven-plugin</artifactId>
			</plugin>
                <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-dependency-plugin</artifactId>
                  <version>3.1.1</version>
                  <reportSets>
                    <reportSet>
                      <reports>
                        <report>analyze-report</report>
                      </reports>
                    </reportSet>
                  </reportSets>
                </plugin>
		</plugins>
	</reporting>
</project>